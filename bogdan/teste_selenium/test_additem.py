# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAdditem():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_additem(self):
    # Test name: additem
    # Step # | name | target | value
    # 1 | open | /ro/3-clothes | 
    self.driver.get("https://prestashop-ta26.multibit.ro/ro/3-clothes")
    # 2 | setWindowSize | 1295x687 | 
    self.driver.set_window_size(1295, 687)
    # 3 | click | css=.js-product:nth-child(1) img | 
    self.driver.find_element(By.CSS_SELECTOR, ".js-product:nth-child(1) img").click()
    # 4 | click | id=group_1 | 
    self.driver.find_element(By.ID, "group_1").click()
    # 5 | select | id=group_1 | label=M
    dropdown = self.driver.find_element(By.ID, "group_1")
    dropdown.find_element(By.XPATH, "//option[. = 'M']").click()
    # 6 | click | css=#group_1 > option:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, "#group_1 > option:nth-child(2)").click()
    product_name = self.driver.find_element(By.TAG_NAME,"h1").get_attribute("innerText")
    # 7 | click | css=.add-to-cart | 
    self.driver.find_element(By.CSS_SELECTOR, ".add-to-cart").click()
    # 8 | click | css=.cart-content-btn > .btn-primary |
    buy_button = WebDriverWait(self.driver, 15).until(lambda d:d.find_element(By.CSS_SELECTOR, ".cart-content-btn > .btn-primary"))
    buy_button.click()
    # 9 | click | css=.touchspin-up | 
    # self.driver.find_element(By.CSS_SELECTOR, ".touchspin-up").click()
    assert product_name.lower() in self.driver.page_source.lower()

